 //Time: O(n)
 //Space: O(1)
### two traversal/reverse linklist ###
class Solution {
public:
    ListNode* reverse(ListNode* head){
        ListNode *prev = NULL, *cur = head;
        ListNode* tmp = NULL;
        while (cur){
            tmp = cur->next;
            cur->next = prev;
            prev = cur;
            cur = tmp;
        }return prev;
    }

    ListNode* removeNodes(ListNode* head) {
        //reverse
        head = reverse(head);
        //iterate reversed link list and save passed max value node
        ListNode* cur = head;
        int last_max = head->val; 
        while(cur->next){
            if (cur->next->val < last_max){
                cur->next = cur->next->next;
            }else{
                last_max = cur->next->val;
                cur = cur->next;
            }
        }
        //reverse back        
        return reverse(head); 
    } 
};
