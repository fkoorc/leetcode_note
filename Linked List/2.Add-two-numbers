//Time: O(max(m, n))
//Space:  O(n), could be O(1) if create a new listnode to track dummy->next, before we delete dummy;
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *dummy = new ListNode();
        ListNode *cur = dummy;
        int digit = 0;
        while(l1!=NULL || l2!=NULL){
            int v1 = (l1!=NULL)? l1->val:0;
            int v2 = (l2!=NULL)? l2->val:0;
            int count = v1+v2+digit;
            digit = count/10;
            cur->next = new ListNode(count%10);
            cur = cur->next;
            l1 = l1!=NULL?l1->next:l1;
            l2 = l2!=NULL?l2->next:l2;
        }
        if (digit!=0){
            cur->next = new ListNode(digit);//digit must = 1 or 0
        }
        return dummy->next;  
    }
};
