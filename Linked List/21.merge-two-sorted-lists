//Time: O(m+n)
 //Space: O(1) dummy/curr
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if (list1 == NULL && list2 == NULL)
            return NULL;
        else if (list1 == NULL)
            return list2;
        else if (list2 == NULL)
            return list1;

        ListNode *dummy = new ListNode();
        ListNode *curr = dummy;
        while(list1 && list2){
            if(list1->val <= list2->val){
                curr->next = list1;
                list1 = list1->next;
            }else if(list1->val > list2->val){
                curr->next = list2;
                list2 = list2->next;
            }
            curr = curr->next;
        }
        //now one of each linked-list will become NULL, add another one
        list1 != NULL ? curr->next = list1 : curr->next = list2;

        return dummy->next;
    }
};
