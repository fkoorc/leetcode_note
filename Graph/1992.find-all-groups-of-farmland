//Time:O(m*n)
//Space:O(m*n)
class Solution {
public:
    vector<vector<int>> findFarmland(vector<vector<int>>& land) {
        vector<vector<int>> res;
        for (int i=0; i<land.size(); i++){
            for (int j=0; j<land[0].size(); j++){
                if (land[i][j] == 1){
                    int max_row=i, max_col=j;
                    dfs(land, i, j, max_row, max_col);
                    res.push_back({i, j, max_row, max_col});
                }
            }
        }
        return res;
    }
    void dfs(vector<vector<int>>& land, int row, int col, int& max_row, int& max_col){
        if (row<0 || col<0 || row>=land.size() || col>=land[0].size() || land[row][col] == 0){
            return;
        }
        land[row][col] = 0;
        max_row = max(max_row, row);
        max_col = max(max_col, col);

        dfs(land, row+0, col+1, max_row, max_col);
        dfs(land, row+0, col-1, max_row, max_col);
        dfs(land, row+1, col+0, max_row, max_col);
        dfs(land, row-1, col+0, max_row, max_col);
    }
};
