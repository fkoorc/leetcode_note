//Time: O(m*n)
//Sapce: O(m*n)
class Solution {
public:
    void dfs(vector<vector<char>>& board, int i, int j, int row, int col){
        //ignore both 'E', 'X'
        if (i<0 || i>=row || j<0 || j>=col || board[i][j] !='O'){
            return;
        }
        board[i][j] = 'E';
        dfs(board, i+1, j+0, row, col);
        dfs(board, i-1, j+0, row, col);
        dfs(board, i+0, j+1, row, col);
        dfs(board, i+0, j-1, row, col);

    }
    void solve(vector<vector<char>>& board) {
        int row = board.size(), col = board[0].size();
        //turn all edge island to 'E'
        for (int i=0; i<row; i++){
            dfs(board, i, 0, row, col);
            dfs(board, i, col-1, row, col);
        }
        for (int j=0; j<col; j++){
            dfs(board, 0, j, row, col);
            dfs(board, row-1, j, row, col);
        }
        // flip O to X, then flip E to O,
        for (int i=0; i<board.size(); i++){
            for (int j=0; j<board[0].size(); j++){
                if (board[i][j] == 'O')board[i][j] = 'X';
                if (board[i][j] == 'E')board[i][j] = 'O';
            }
        }
    }
};
