set<vector<int>> cout

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        set< vector<int> > s;
        vector<int>v(3);
        v[0] = 0;
        v[1] = 1;
        v[2] = 2;
        s.insert(v);
        s.insert({3, 4, 5});
        set< vector<int> >::iterator it;
        for(it = s.begin(); it != s.end(); it++){
            const vector<int>& i = (*it);// here get the vector
            for (auto n: i)
                cout<<n<<" ";// output first vector.
            cout<<endl;
        }
        
        return false;

    }    
    
};


set<int>s;
        s.insert(77);
        s.insert(13);
        s.insert(44);
        set<int>::iterator it;
        for (auto it=s.begin();it != s.end();it++)
            cout<<*it<<" ";
        cout<<endl;
        it = s.begin();
        cout<<*s.begin()<<" "<<*s.end()<<endl;
        cout<<*it<<*s.begin()<<endl;
