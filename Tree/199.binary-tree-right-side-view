//Time: O(n)
//Space: O(n)
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        if (root == NULL) return {}};
        queue<TreeNode*> q;
        q.push(root);

        vector<int>res;

        while(!q.empty()){
            //vector<int> cur;
            int n = q.size();

            for(int i=0; i<n; i++){//brilliant thinking
                TreeNode* node = q.front();
                q.pop();

                if (i == n-1){// if its the last node in this level
                    res.push_back(node->val);
                }

                if (node->left != NULL){
                    q.push(node->left);
                }
                if (node->right != NULL){
                    q.push(node->right);
                }
            }
        }
        return res;
    }
};
