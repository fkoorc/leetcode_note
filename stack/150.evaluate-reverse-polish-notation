//Time: O(n)
//Space: O(n) for the stack DS
class Solution {
public:
    int evalRPN(vector<string>& tokens) {
        //the last token must be char
        stack<char>p;
        stack<int>stk;

        for (auto &token:tokens){
            //if token is numbers
            // isdigit convert char to int, token[0]->char type, and token->string type
            //when token.size()>1 means the token is -xxx, so the size is 2 or larger
            if (token.size() > 1 || isdigit(token[0])){
                stk.push(stoi(token));
                continue;
            }
            //if token is operator, and now stk has at least two number
            int num2 = stk.top();
            stk.pop();
            int num1 = stk.top();
            stk.pop();

            int result = 0;
            if (token == "+") {
                result = num1 + num2;
            } else if (token == "-") {
                result = num1 - num2;
            } else if (token == "*") {
                result = num1 * num2;
            } else {
                result = num1 / (double)num2;
            }
            stk.push(result);
        }
        return stk.top();   
    }
};
