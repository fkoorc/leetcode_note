//Time: O(n log n)
//Speed: O(n)
class Solution {
public:
    int carFleet(int target, vector<int>& position, vector<int>& speed) { 
        int n = position.size();
        vector<pair<int, double>>cars;//position, time 

        // Calculate time for each car to reach the target
        for (int i=0; i<n; i++){
            double time = (double)(target-position[i])/speed[i];
            cars.push_back({position[i], time});
        }
        // Sort cars based on their position
        sort(cars.begin(), cars.end()); //O(nlogn)
        
        //for (auto &car:cars)cout<<car.first<<" "<<car.second<<endl;
        double maxtime = 0.0;
        int ans = 0;
        for (int i=n-1; i>=0; i--){
            double time = cars[i].second;
            if (time>maxtime){
                maxtime = time;
                ans++;
            }
        }
        return ans;
    }
};
