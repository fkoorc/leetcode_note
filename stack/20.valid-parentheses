//Time: O(n)
//Space: O(1)
class Solution {
public:
    bool isValid(string s) {
        stack<char>open;
        unordered_map<char, char>p = {
            {')', '('}, 
            {']', '['},
            {'}', '{'}
        };
        for(auto &c:s){
            //if c is closet
            if (p.find(c)!=p.end()){
                if (open.empty())return false;
                if (open.top() != p[c])return false;
                if (open.top() == p[c])open.pop();
            }
            else 
                open.push(c);
        }
        return open.empty();//return true if open is empty
    }
};
