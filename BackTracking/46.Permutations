//Time: O(n!)
//Space: O(n!)
class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>>ans;
        dfs(nums, 0, ans);
        return ans; 
    }
private:
    void dfs(vector<int> &nums, int start, vector<vector<int>> &ans){
        if (start == nums.size()){
            ans.push_back(nums);
            return;
        }
        for (int i=start; i<nums.size(); i++){
            swap(nums[i], nums[start]);
            dfs(nums, start+1, ans);
            swap(nums[i], nums[start]);
        }
    }
};
