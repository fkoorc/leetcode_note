//Time: O(s2.size())->O(s2_n)
//Space: O(26)-> O(1)
class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        int s1_n = s1.size();
        int s2_n = s2.size();
        vector<int>count1(26, 0);
        vector<int>count2(26, 0);

        if (s1_n>s2_n)return false;

        //initial s1 size window
        for (int i=0; i<s1_n; i++){
            count1[s1[i]-'a']++;// stick with that
            count2[s2[i]-'a']++;
        }
        for (int i = s1_n; i<s2_n; i++){
            //start from the initial s1 size window
            if (count1 == count2) return true; 
            count2[s2[i]-'a']++;
            count2[s2[i-s1_n]-'a']--;
        }
        //check last window
        return count1 == count2;
    }
};
